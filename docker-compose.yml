version: '3.9'
x-logging: &fluent-bit
  driver: fluentd
  options:
    fluentd-address: ${FLUENT_BIT_ADDRESS}:24224

services:
    #environment:
   #  - EUREKA_SERVER=http://eureka-service:8761/eureka/
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - airbnb
      - monitoring
  redis:
    container_name: redis
    image: redis:6.0-alpine
    ports:
      - "6379:6379"
    networks:
      - airbnb
      - monitoring

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo:4.4
    # environment:
    # - MONGO_INITDB_DATABASE=project
    ports:
      - "27017:27017"
    networks:
      - airbnb
      - monitoring
    logging: *fluent-bit
    volumes: 
      - ./mongodb/data/db:/data/db
    depends_on:
      - neo4j

  neo4j:
    container_name: neo4j
    #hostname: neo4j
    image: neo4j:4.3.0
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./neo/conf:/conf
      - ./neo/data:/data
      - ./neo/import:/import
      - ./neo/logs:/logs
      - ./neo/plugins:/plugins
    environment: 
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G 
      #- NEO4J_AUTH=neo4j/12341234
      - NEO4J_AUTH=none
    networks:
      - airbnb
      - monitoring


  eureka-service:
    image: eureka-service
    build: ./eureka
    restart: unless-stopped
    container_name: eureka
    ports:
      - 8761:8761
    networks:
      - airbnb
      - monitoring
    logging: *fluent-bit
    depends_on:
      - rabbitmq
      - mongodb
      - redis


  gateway-service:
    image: gateway-service
    build: ./eureka-gateway
    container_name: gateway-service
    ports:
      - "7777:7777"
    networks:
      - airbnb
      - monitoring
    depends_on:
      - eureka-service


  reglog:
    image: reglog-service
    build: ./main-app
    ports:
      - "8082:8082"
      # - "7979:7979"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_REDIS_HOST=redis
      - SPRING_DATA_MONGODB_HOST=mongodb
      - JAEGER_DOMAIN=${JAEGER_DOMAIN}
      - OTEL_SERVICE_NAME=reglog
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14250
      - ORG_NEO4J_DRIVER_URI=bolt://neo4j:7687
    depends_on:
      - gateway-service
    networks:
      - airbnb
      - monitoring
    logging: *fluent-bit

  
  email:
    image: email-service
    build: ./email-microservice
    ports: 
      - "8083:8083"
    depends_on:
      - gateway-service
    environment:
      #- EUREKA_SERVER=http://EUREKA-SERVICE:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_REDIS_HOST=redis
      - SPRING_DATA_MONGODB_HOST=mongodb
      - JAEGER_DOMAIN=${JAEGER_DOMAIN}
      - OTEL_SERVICE_NAME=email
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14250
    logging: *fluent-bit
    networks:
      - airbnb
      - monitoring
    links:
      - mongodb:mongodb


  smestaj:
    image: smestaj-service
    build: ./smestaj-microservice
    ports:
      - "8090:8090"
      # - "7977:7977"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_REDIS_HOST=redis
      - SPRING_DATA_MONGODB_HOST=mongodb
      - JAEGER_DOMAIN=${JAEGER_DOMAIN}
      - OTEL_SERVICE_NAME=smestaj
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - ORG_NEO4J_DRIVER_URI=bolt://neo4j:7687
    depends_on:
      - gateway-service
    networks:
      - airbnb
      - monitoring
    logging: *fluent-bit
  
  reservation:
    image: reservation-service
    build: ./reservation-service
    ports:
      - "8091:8091"
      # - "7978:7978"
    environment:
      #- EUREKA_SERVER=http://EUREKA-SERVICE:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_REDIS_HOST=redis
      - SPRING_DATA_MONGODB_HOST=mongodb
      - JAEGER_DOMAIN=${JAEGER_DOMAIN}
      - OTEL_SERVICE_NAME=reservation
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - ORG_NEO4J_DRIVER_URI=bolt://neo4j:7687

    depends_on:
      - gateway-service
    networks:
      - airbnb
      - monitoring
    logging: *fluent-bit

  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      # - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      # - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
      # - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
      # - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      # - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongodb
    ports:
      - "8888:8081"
    networks:
      - airbnb

  

  airbnb_front:
    build: ./airbnb-xml2023-front-smestaj
    command: npm run serve
    ports:
      - 8081:8081
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules

  # flights_mongodb:
  #   image: "mongo:4.4.3"
  #   restart: always
  #   ports:
  #     - 27018:27017


  flights:
    build: ./flights
    restart: always
    ports:
      - 8084:8084 
    depends_on:
      - gateway-service
    networks:
      - airbnb
      - monitoring
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb


  flights_front:
    build: ./planetickets
    command: npm run serve
    ports:
      - 8079:8080
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules  
  
volumes:
  database-data:
    name: server-database
  # mongo:
  #   name: mongo

networks:
  airbnb:
    name: airbnb
    driver: bridge
  monitoring:
    external: true

        



      

    