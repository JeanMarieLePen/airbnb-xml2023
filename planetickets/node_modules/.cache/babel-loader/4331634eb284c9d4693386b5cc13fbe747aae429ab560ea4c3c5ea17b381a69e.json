{"ast":null,"code":"import { YandexMap, YandexMarker } from \"vue-yandex-maps\";\nimport { loadYmap } from \"vue-yandex-maps\";\nexport default {\n  data() {\n    return {\n      settings: {\n        apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\n        lang: \"en_US\",\n        coordorder: \"latlong\",\n        enterprise: false,\n        version: \"2.1\"\n      }\n    };\n  },\n  components: {\n    YandexMap,\n    YandexMarker\n  },\n  async mounted() {\n    console.log(\"MONTIRANJE\");\n    await loadYmap({\n      ...this.settings,\n      format: \"json\",\n      debug: true\n    });\n    // await this.getEntity();\n    // await this.getCoordsFromAdresa();\n  },\n\n  methods: {\n    // async getCoordsFromAdresa(adresa){\n    //     ymaps.geocode(adresa).then((result) => {\n    //         let locationCoords = {\n    //             coords: result.geoObjects.get(0).geometry.getCoordinates(),\n    //         };\n    //         let location = new Object();\n    //         location.lat = locationCoords.coords[0];\n    //         location.lng = locationCoords.coords[1];\n\n    //     });\n    // },\n    async getCoordsFromAdresa(adresa) {\n      return () => {\n        console.log(\"AAAAAAA\");\n        ymaps.geocode(adresa).then(result => {\n          let locationCoords = {\n            coords: result.geoObjects.get(0).geometry.getCoordinates()\n          };\n          let location = new Object();\n          location.lat = locationCoords.coords[0];\n          location.lng = locationCoords.coords[1];\n        });\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AAKA,SAAQA,SAAS,EAAEC,YAAY,QAAO,iBAAgB;AACtD,SAASC,QAAO,QAAS,iBAAiB;AAE1C,eAAe;EACVC,IAAI,GAAE;IACH,OAAM;MACFC,QAAQ,EAAE;QACNC,MAAM,EAAE,sCAAsC;QAC9CC,IAAI,EAAE,OAAO;QACbC,UAAU,EAAE,SAAS;QACrBC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EACDC,UAAU,EAAC;IACPV,SAAS;IAAEC;EACf,CAAC;EACD,MAAMU,OAAO,GAAE;IACXC,OAAO,CAACC,GAAG,CAAC,YAAY;IACxB,MAAMX,QAAQ,CAAC;MAAE,GAAG,IAAI,CAACE,QAAQ;MAAEU,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAI,CAAC,CAAC;IAChE;IACA;EACJ,CAAC;;EACDC,OAAO,EAAC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA,MAAMC,mBAAmB,CAACC,MAAM,EAAC;MAC7B,OAAQ,MAAM;QACVN,OAAO,CAACC,GAAG,CAAC,SAAS;QACrBM,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,CAACG,IAAI,CAAEC,MAAM,IAAK;UACnC,IAAIC,cAAa,GAAI;YACjBC,MAAM,EAAEF,MAAM,CAACG,UAAU,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,cAAc;UAC5D,CAAC;UACD,IAAIC,QAAO,GAAI,IAAIC,MAAM,EAAE;UAC3BD,QAAQ,CAACE,GAAE,GAAIR,cAAc,CAACC,MAAM,CAAC,CAAC,CAAC;UACvCK,QAAQ,CAACG,GAAE,GAAIT,cAAc,CAACC,MAAM,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC;MACN,CAAC;IACL;EACJ;AACJ","names":["YandexMap","YandexMarker","loadYmap","data","settings","apiKey","lang","coordorder","enterprise","version","components","mounted","console","log","format","debug","methods","getCoordsFromAdresa","adresa","ymaps","geocode","then","result","locationCoords","coords","geoObjects","get","geometry","getCoordinates","location","Object","lat","lng"],"sourceRoot":"","sources":["C:\\Users\\SNSBOT\\Desktop\\XML-2023[PROJEKAT]\\APP2-front\\planetickets\\src\\components\\Coords.vue"],"sourcesContent":["<template>\r\n    <div></div>\r\n</template>\r\n\r\n<script>\r\nimport {YandexMap, YandexMarker} from \"vue-yandex-maps\"\r\nimport { loadYmap } from \"vue-yandex-maps\";\r\n\r\nexport default {\r\n     data(){\r\n        return{\r\n            settings: {\r\n                apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\r\n                lang: \"en_US\",\r\n                coordorder: \"latlong\",\r\n                enterprise: false,\r\n                version: \"2.1\",\r\n            },\r\n        }\r\n    },\r\n    components:{\r\n        YandexMap, YandexMarker,\r\n    },\r\n    async mounted(){\r\n        console.log(\"MONTIRANJE\")\r\n        await loadYmap({ ...this.settings, format: \"json\", debug: true});\r\n        // await this.getEntity();\r\n        // await this.getCoordsFromAdresa();\r\n    },\r\n    methods:{\r\n        // async getCoordsFromAdresa(adresa){\r\n        //     ymaps.geocode(adresa).then((result) => {\r\n        //         let locationCoords = {\r\n        //             coords: result.geoObjects.get(0).geometry.getCoordinates(),\r\n        //         };\r\n        //         let location = new Object();\r\n        //         location.lat = locationCoords.coords[0];\r\n        //         location.lng = locationCoords.coords[1];\r\n\r\n        //     });\r\n        // },\r\n        async getCoordsFromAdresa(adresa){\r\n            return (() => {\r\n                console.log(\"AAAAAAA\")\r\n                ymaps.geocode(adresa).then((result) => {\r\n                    let locationCoords = {\r\n                        coords: result.geoObjects.get(0).geometry.getCoordinates(),\r\n                    };\r\n                    let location = new Object();\r\n                    location.lat = locationCoords.coords[0];\r\n                    location.lng = locationCoords.coords[1];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}