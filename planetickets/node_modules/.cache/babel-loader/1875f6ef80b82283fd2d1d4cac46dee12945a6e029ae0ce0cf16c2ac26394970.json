{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { YandexMap, YandexMarker } from \"vue-yandex-maps\";\nimport { loadYmap } from \"vue-yandex-maps\";\nconst tempParser = {\n  data() {\n    return {};\n  },\n  methods: {\n    async getCoordsFromAdresa(adresa) {\n      ymaps.geocode(adresa).then(result => {\n        let locationCoords = {\n          coords: result.geoObjects.get(0).geometry.getCoordinates()\n        };\n        let location = new Object();\n        location.lat = locationCoords.coords[0];\n        location.lng = locationCoords.coords[1];\n      });\n    },\n    checkLoginStatus() {\n      if (JSON.parse(localStorage.getItem('xmljwt')) == null) {\n        this.$router.push(`/login`);\n      }\n    },\n    parseXmlJwt() {\n      if (localStorage.getItem('xmljwt')) {\n        console.log(\"TOKEN JE:\");\n        console.log(localStorage.getItem('xmljwt'));\n        if (localStorage.getItem('xmljwt').toString() != 'null') {\n          let parsedToken = this.parseJwt(localStorage.getItem('xmljwt'));\n          console.log('TOKEN KOJI SE PARSIRA: ' + JSON.stringify(parsedToken));\n          localStorage.setItem('parsedToken', JSON.stringify(parsedToken));\n          try {\n            let tempUsername = localStorage.getItem('parsedToken').split(\",\")[2].split(':')[1];\n            tempUsername = tempUsername.slice(1, tempUsername.length - 1).trim();\n            let tempRole = localStorage.getItem('parsedToken').split(\",\")[0].split(\":\")[1];\n            tempRole = tempRole.slice(1, tempRole.length - 1).trim();\n            let tempId = localStorage.getItem('parsedToken').split(\",\")[1].split(':')[1];\n            tempId = tempId.trim();\n            let userObj = new Object();\n            userObj.id = tempId;\n            userObj.role = tempRole;\n            userObj.email = tempUsername;\n            console.log(\"AAAAWDAWDAW\");\n            console.log(JSON.stringify(userObj));\n            return userObj;\n          } catch (error) {\n            // console.log(\"Greska pri parsiranju jwt-a: \" + error.message);\n            // localStorage.setItem('xmljwt', null);\n            // localStorage.setItem('parsToken', null);\n          }\n        }\n      }\n    },\n    parseJwt(token) {\n      console.log(\"MIXIN PARSIRANJE\");\n      if (token != null) {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        return JSON.parse(jsonPayload);\n      }\n    }\n  }\n};\nexport default tempParser;","map":{"version":3,"names":["YandexMap","YandexMarker","loadYmap","tempParser","data","methods","getCoordsFromAdresa","adresa","ymaps","geocode","then","result","locationCoords","coords","geoObjects","get","geometry","getCoordinates","location","Object","lat","lng","checkLoginStatus","JSON","parse","localStorage","getItem","$router","push","parseXmlJwt","console","log","toString","parsedToken","parseJwt","stringify","setItem","tempUsername","split","slice","length","trim","tempRole","tempId","userObj","id","role","email","error","token","base64Url","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","join"],"sources":["C:/Users/SNSBOT/Desktop/XML-2023[PROJEKAT]/APP2-front/planetickets/src/mixins/mixin.js"],"sourcesContent":["import {YandexMap, YandexMarker} from \"vue-yandex-maps\"\r\nimport { loadYmap } from \"vue-yandex-maps\";\r\n\r\nconst tempParser = {\r\n    data(){\r\n        return{\r\n            \r\n        }\r\n    },\r\n    methods:{\r\n        async getCoordsFromAdresa(adresa){\r\n            ymaps.geocode(adresa).then((result) => {\r\n                let locationCoords = {\r\n                    coords: result.geoObjects.get(0).geometry.getCoordinates(),\r\n                };\r\n                let location = new Object();\r\n                location.lat = locationCoords.coords[0];\r\n                location.lng = locationCoords.coords[1];\r\n            });\r\n\r\n            \r\n        },\r\n        checkLoginStatus(){\r\n            if(JSON.parse(localStorage.getItem('xmljwt'))==null){\r\n                this.$router.push(`/login`);\r\n              }\r\n        },\r\n\r\n        parseXmlJwt(){\r\n            if(localStorage.getItem('xmljwt')){\r\n                console.log(\"TOKEN JE:\")\r\n                console.log(localStorage.getItem('xmljwt'));\r\n                if(localStorage.getItem('xmljwt').toString() != 'null'){\r\n                    let parsedToken = this.parseJwt(localStorage.getItem('xmljwt'));\r\n                    console.log('TOKEN KOJI SE PARSIRA: ' + JSON.stringify(parsedToken));\r\n                    localStorage.setItem('parsedToken', JSON.stringify(parsedToken));\r\n                    try{\r\n                        let tempUsername = localStorage.getItem('parsedToken').split(\",\")[2].split(':')[1];\r\n                        tempUsername = tempUsername.slice(1, tempUsername.length - 1).trim();\r\n                        let tempRole = localStorage.getItem('parsedToken').split(\",\")[0].split(\":\")[1];\r\n                        tempRole = tempRole.slice(1, tempRole.length - 1).trim();\r\n                        let tempId = localStorage.getItem('parsedToken').split(\",\")[1].split(':')[1];\r\n                        tempId = tempId.trim();\r\n\r\n                        let userObj = new Object();\r\n                        userObj.id = tempId;\r\n                        userObj.role = tempRole;\r\n                        userObj.email = tempUsername;\r\n                        console.log(\"AAAAWDAWDAW\")\r\n                        console.log(JSON.stringify(userObj));\r\n                        return userObj;\r\n                        \r\n                    }catch(error){\r\n                        // console.log(\"Greska pri parsiranju jwt-a: \" + error.message);\r\n                        // localStorage.setItem('xmljwt', null);\r\n                        // localStorage.setItem('parsToken', null);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        parseJwt(token){\r\n            console.log(\"MIXIN PARSIRANJE\");\r\n            if(token != null){\r\n                var base64Url = token.split('.')[1];\r\n                var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n                }).join(''));\r\n        \r\n                return JSON.parse(jsonPayload);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default tempParser;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,YAAY,QAAO,iBAAiB;AACvD,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,MAAMC,UAAU,GAAG;EACfC,IAAI,GAAE;IACF,OAAM,CAEN,CAAC;EACL,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,mBAAmB,CAACC,MAAM,EAAC;MAC7BC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,CAACG,IAAI,CAAEC,MAAM,IAAK;QACnC,IAAIC,cAAc,GAAG;UACjBC,MAAM,EAAEF,MAAM,CAACG,UAAU,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,cAAc;QAC5D,CAAC;QACD,IAAIC,QAAQ,GAAG,IAAIC,MAAM,EAAE;QAC3BD,QAAQ,CAACE,GAAG,GAAGR,cAAc,CAACC,MAAM,CAAC,CAAC,CAAC;QACvCK,QAAQ,CAACG,GAAG,GAAGT,cAAc,CAACC,MAAM,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;IAGN,CAAC;IACDS,gBAAgB,GAAE;MACd,IAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAE,IAAI,EAAC;QAChD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,QAAO,CAAC;MAC7B;IACN,CAAC;IAEDC,WAAW,GAAE;MACT,IAAGJ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAC;QAC9BI,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxBD,OAAO,CAACC,GAAG,CAACN,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAGD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAACM,QAAQ,EAAE,IAAI,MAAM,EAAC;UACnD,IAAIC,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACT,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;UAC/DI,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGR,IAAI,CAACY,SAAS,CAACF,WAAW,CAAC,CAAC;UACpER,YAAY,CAACW,OAAO,CAAC,aAAa,EAAEb,IAAI,CAACY,SAAS,CAACF,WAAW,CAAC,CAAC;UAChE,IAAG;YACC,IAAII,YAAY,GAAGZ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClFD,YAAY,GAAGA,YAAY,CAACE,KAAK,CAAC,CAAC,EAAEF,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,EAAE;YACpE,IAAIC,QAAQ,GAAGjB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9EI,QAAQ,GAAGA,QAAQ,CAACH,KAAK,CAAC,CAAC,EAAEG,QAAQ,CAACF,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,EAAE;YACxD,IAAIE,MAAM,GAAGlB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5EK,MAAM,GAAGA,MAAM,CAACF,IAAI,EAAE;YAEtB,IAAIG,OAAO,GAAG,IAAIzB,MAAM,EAAE;YAC1ByB,OAAO,CAACC,EAAE,GAAGF,MAAM;YACnBC,OAAO,CAACE,IAAI,GAAGJ,QAAQ;YACvBE,OAAO,CAACG,KAAK,GAAGV,YAAY;YAC5BP,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;YAC1BD,OAAO,CAACC,GAAG,CAACR,IAAI,CAACY,SAAS,CAACS,OAAO,CAAC,CAAC;YACpC,OAAOA,OAAO;UAElB,CAAC,QAAMI,KAAK,EAAC;YACT;YACA;YACA;UAAA;QAER;MACJ;IAEJ,CAAC;IAEDd,QAAQ,CAACe,KAAK,EAAC;MACXnB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAGkB,KAAK,IAAI,IAAI,EAAC;QACb,IAAIC,SAAS,GAAGD,KAAK,CAACX,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnC,IAAIa,MAAM,GAAGD,SAAS,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAC5D,IAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACb,KAAK,CAAC,EAAE,CAAC,CAACkB,GAAG,CAAC,UAASC,CAAC,EAAE;UACxE,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC1B,QAAQ,CAAC,EAAE,CAAC,EAAEO,KAAK,CAAC,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAACoB,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,OAAOpC,IAAI,CAACC,KAAK,CAAC6B,WAAW,CAAC;MAClC;IACJ;EACJ;AACJ,CAAC;AACD,eAAelD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}