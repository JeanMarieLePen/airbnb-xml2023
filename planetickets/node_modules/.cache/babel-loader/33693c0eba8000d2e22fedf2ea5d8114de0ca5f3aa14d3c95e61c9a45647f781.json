{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport parserMixin from '@/mixins/mixin';\nimport dataService from '../services/dataService';\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport moment from 'moment';\nimport { YandexMap, YandexMarker } from \"vue-yandex-maps\";\nimport { loadYmap } from \"vue-yandex-maps\";\nexport default {\n  components: {\n    datepicker: VueDatePicker,\n    YandexMap: YandexMap,\n    YandexMarker: YandexMarker\n  },\n  data: function data() {\n    return {\n      //Polja u Klasi Let\n\n      // private String id;\n\n      // private Adresa lokOd;\n      // private Adresa lokDo;\n\n      // private String brojLeta;\n      // private int kapacitet;\n      // private double cena;\n      // private LocalDateTime datumIVreme;\n      // @DBRef\n      // @Nullable\n      // private Collection<RegKor> listaPutnika;\n      settings: {\n        apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\n        lang: \"en_US\",\n        coordorder: \"latlong\",\n        enterprise: false,\n        version: \"2.1\"\n      },\n      messages: {\n        successMessage: '',\n        errorMessage: '',\n        errorLokOd: '',\n        errorLokDo: '',\n        errorTermin: '',\n        errorBrLet: '',\n        errorKapacitet: '',\n        errorCena: ''\n      },\n      flight: {\n        lokOd: new Object(),\n        lokDo: new Object(),\n        //ovo bi trebalo generisati automatski al ajd\n        brojLeta: -1,\n        kapacitet: -1,\n        cena: -1,\n        datumIVreme: new Date()\n      },\n      lokacija: new Object()\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loadYmap(_objectSpread(_objectSpread({}, _this.settings), {}, {\n              format: \"json\",\n              debug: true\n            }));\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  created: function created() {},\n  methods: {\n    updateDatePicker: function updateDatePicker(val1) {\n      console.log(\"VAL1: \" + val1);\n      var tempDatum = moment(val1).format('YYYY-MM-DD');\n      console.log(\"TEMP DATUM: \" + tempDatum);\n      this.flight.datumIVreme = tempDatum;\n    },\n    createNewFlight: function createNewFlight() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"ODREDJIVANJE KOORDINATA\");\n              _context2.next = 3;\n              return _this2.getCoordsFromAdresa(_this2.flight.lokOd.adresa);\n            case 3:\n              _this2.flight.lokOd.lat = _this2.lokacija.lat;\n              _this2.flight.lokOd.lng = _this2.lokacija.lng;\n              _context2.next = 7;\n              return _this2.getCoordsFromAdresa(_this2.flight.lokDo.adresa);\n            case 7:\n              _this2.flight.lokDo.lat = _this2.lokacija.lat;\n              _this2.flight.lokDo.lng = _this2.lokacija.lng;\n              console.log(\"RUTA: \" + JSON.stringify(_this2.flight.lokOd));\n              dataService.createNewFlight(_this2.flight).then(function (response) {\n                console.log(\"KREIRAN LET\");\n                if (response.status === 200) {\n                  _this2.messages.successMessage = '<h4>Uspesno dodat let</h4>';\n                  setTimeout(function () {\n                    _this2.messages.successMessage = '';\n                    _this2.$router.push(\"/dash\");\n                  }, 3500);\n                } else {\n                  _this2.messages.errorMessage = '<h4>Doslo je do greske!</h4>';\n                  setTimeout(function () {\n                    _this2.messages.errorMessage = '';\n                  });\n                }\n              });\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    getCoordsFromAdresa: function getCoordsFromAdresa(adresa) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"ADRESA: \" + adresa);\n              return _context3.abrupt(\"return\", ymaps.geocode(adresa).then(function (result) {\n                var locationCoords = {\n                  coords: result.geoObjects.get(0).geometry.getCoordinates()\n                };\n                _this3.lokacija.lat = locationCoords.coords[0];\n                _this3.lokacija.lng = locationCoords.coords[1];\n                console.log(\"LOKACIJA: \" + JSON.stringify(_this3.lokacija));\n              }));\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["parserMixin","dataService","VueDatePicker","moment","YandexMap","YandexMarker","loadYmap","components","datepicker","data","settings","apiKey","lang","coordorder","enterprise","version","messages","successMessage","errorMessage","errorLokOd","errorLokDo","errorTermin","errorBrLet","errorKapacitet","errorCena","flight","lokOd","Object","lokDo","brojLeta","kapacitet","cena","datumIVreme","Date","lokacija","mounted","format","debug","created","methods","updateDatePicker","val1","console","log","tempDatum","createNewFlight","getCoordsFromAdresa","adresa","lat","lng","JSON","stringify","then","response","status","setTimeout","$router","push","ymaps","geocode","result","locationCoords","coords","geoObjects","get","geometry","getCoordinates"],"sourceRoot":"","sources":["C:\\Users\\SNSBOT\\Desktop\\XML-2023-projekat2\\frontend\\template-project\\planetickets\\src\\components\\NoviLet.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <h2>Kreiranje novog entiteta</h2>\r\n            <p>Popunite trazene karakteristike kako biste kreirali entitet</p>\r\n        </div>\r\n        <div>\r\n            <div style=\"width:50%\">\r\n                <table class=\"table\">\r\n\r\n\r\n                    <tr>\r\n                        <td>Broj</td>\r\n                        <td><input class=\"input-class\" v-model=\"flight.brojLeta\" type=\"text\" placeholder=\"Unesite broj leta...\" ></td>\r\n                    </tr>\r\n                     <tr>\r\n                        <td>Mesto polaska</td>\r\n                        <td><input class=\"input-class\" v-model=\"flight.lokOd.adresa\" type=\"text\" placeholder=\"Unesite mesto polaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Mesto dolaska</td>\r\n                        <td><input class=\"input-class\" v-model=\"flight.lokDo.adresa\" type=\"text\" placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Maksimalni kapacitet</td>\r\n                        <td><input v-model=\"flight.kapacitet\" class=\"input-class\" type=\"text\" placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Cena karte</td>\r\n                        <td><input v-model=\"flight.cena\" class=\"input-class\" type=\"text\"  placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Datum i vreme polaska</td>\r\n                        <td>\r\n                            <datepicker @selected=\"updateDatePicker\" v-model=\"flight.datumIVreme\">\r\n\r\n                            </datepicker>\r\n                        </td>\r\n                    </tr>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colspan=\"2\">\r\n                                <div v-if=\"messages.successMessage\" v-html=\"messages.successMessage\" class=\"alert alert-success\"></div>\r\n                            <div v-if=\"messages.errorMessage\" v-html=\"messages.errorMessage\" class=\"alert alert-warning\"></div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            \r\n                            <td colspan=\"2\" class=\"text-center\">\r\n                                <button @click=\"createNewFlight()\">Kreiraj</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport parserMixin from '@/mixins/mixin' \r\nimport dataService from '../services/dataService'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport moment from 'moment'\r\n\r\nimport {YandexMap, YandexMarker} from \"vue-yandex-maps\"\r\nimport { loadYmap } from \"vue-yandex-maps\";\r\n\r\nexport default {\r\n    components:{\r\n        datepicker:VueDatePicker,\r\n        YandexMap, YandexMarker,\r\n    },\r\n    data(){\r\n        return{\r\n            //Polja u Klasi Let\r\n\r\n            // private String id;\r\n\t\r\n            // private Adresa lokOd;\r\n            // private Adresa lokDo;\r\n            \r\n            // private String brojLeta;\r\n            // private int kapacitet;\r\n            // private double cena;\r\n            // private LocalDateTime datumIVreme;\r\n            // @DBRef\r\n            // @Nullable\r\n            // private Collection<RegKor> listaPutnika;\r\n            settings: {\r\n                apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\r\n                lang: \"en_US\",\r\n                coordorder: \"latlong\",\r\n                enterprise: false,\r\n                version: \"2.1\",\r\n            },\r\n            messages:{\r\n                successMessage:'',\r\n                errorMessage:'',\r\n                \r\n                errorLokOd:'',\r\n                errorLokDo:'',\r\n                errorTermin:'',\r\n                errorBrLet:'',\r\n                errorKapacitet:'',\r\n                errorCena:'',\r\n            },\r\n            flight:{\r\n                lokOd: new Object(),\r\n                lokDo: new Object(),\r\n                //ovo bi trebalo generisati automatski al ajd\r\n                brojLeta: -1,\r\n                kapacitet: -1,\r\n                cena: -1,\r\n                datumIVreme: new Date(),\r\n            },\r\n            lokacija: new Object(),\r\n        }\r\n    },\r\n    async mounted(){\r\n        await loadYmap({ ...this.settings, format: \"json\", debug: true});\r\n    },\r\n    created(){\r\n\r\n    },\r\n    methods:{\r\n        updateDatePicker(val1){\r\n            console.log(\"VAL1: \"  + val1);\r\n            let tempDatum = moment(val1).format('YYYY-MM-DD');\r\n            console.log(\"TEMP DATUM: \"  + tempDatum);\r\n            this.flight.datumIVreme = tempDatum;\r\n        },\r\n        async createNewFlight(){\r\n            console.log(\"ODREDJIVANJE KOORDINATA\");\r\n            await this.getCoordsFromAdresa(this.flight.lokOd.adresa);\r\n            this.flight.lokOd.lat = this.lokacija.lat;\r\n            this.flight.lokOd.lng = this.lokacija.lng;\r\n\r\n            await this.getCoordsFromAdresa(this.flight.lokDo.adresa);\r\n            this.flight.lokDo.lat = this.lokacija.lat;\r\n            this.flight.lokDo.lng = this.lokacija.lng;\r\n\r\n            console.log(\"RUTA: \" + JSON.stringify(this.flight.lokOd));\r\n\r\n            dataService.createNewFlight(this.flight).then(response => {\r\n                console.log(\"KREIRAN LET\");\r\n                if(response.status === 200){\r\n                    this.messages.successMessage = '<h4>Uspesno dodat let</h4>'\r\n                    setTimeout(() => {\r\n                        this.messages.successMessage = '';\r\n                        this.$router.push(`/dash`);\r\n                    }, 3500);\r\n                }else{\r\n                    this.messages.errorMessage = '<h4>Doslo je do greske!</h4>'\r\n                    setTimeout(() => {\r\n                        this.messages.errorMessage = '';\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        async getCoordsFromAdresa(adresa){\r\n            console.log(\"ADRESA: \" + adresa)\r\n            return ymaps.geocode(adresa).then((result) => {\r\n                let locationCoords = {\r\n                    coords: result.geoObjects.get(0).geometry.getCoordinates(),\r\n                };\r\n                this.lokacija.lat = locationCoords.coords[0];\r\n                this.lokacija.lng = locationCoords.coords[1];\r\n                console.log(\"LOKACIJA: \" + JSON.stringify(this.lokacija));\r\n            });\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.table{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    margin-left: 20px;\r\n}\r\n.table tr:nth-child(even){\r\n    background-color: aquamarine;\r\n}\r\n.table td:nth-child(1){\r\n    width:30%;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n}\r\n.table td:nth-child(2){\r\n    width:100%;\r\n}\r\n.table td>input{\r\n    width:100%;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}