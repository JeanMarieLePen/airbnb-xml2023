{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport parserMixin from '@/mixins/mixin';\nimport dataService from '../services/dataService';\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport moment from 'moment';\nimport { YandexMap, YandexMarker } from \"vue-yandex-maps\";\nimport { loadYmap } from \"vue-yandex-maps\";\nexport default {\n  components: {\n    datepicker: VueDatePicker,\n    YandexMap,\n    YandexMarker\n  },\n  data() {\n    return {\n      //Polja u Klasi Let\n\n      // private String id;\n\n      // private Adresa lokOd;\n      // private Adresa lokDo;\n\n      // private String brojLeta;\n      // private int kapacitet;\n      // private double cena;\n      // private LocalDateTime datumIVreme;\n      // @DBRef\n      // @Nullable\n      // private Collection<RegKor> listaPutnika;\n\n      messages: {\n        successMessage: '',\n        errorMessage: '',\n        errorLokOd: '',\n        errorLokDo: '',\n        errorTermin: '',\n        errorBrLet: '',\n        errorKapacitet: '',\n        errorCena: ''\n      },\n      flight: {\n        lokOd: new Object(),\n        lokDo: new Object(),\n        //ovo bi trebalo generisati automatski al ajd\n        brojLeta: -1,\n        kapacitet: -1,\n        cena: -1,\n        datumIVreme: new Date()\n      },\n      lokacija: new Object()\n    };\n  },\n  async mounted() {\n    await loadYmap({\n      ...this.settings,\n      format: \"json\",\n      debug: true\n    });\n  },\n  created() {},\n  methods: {\n    updateDatePicker(val1) {\n      console.log(\"VAL1: \" + val1);\n      let tempDatum = moment(val1).format('YYYY-MM-DD');\n      console.log(\"TEMP DATUM: \" + tempDatum);\n      this.flight.datumIVreme = tempDatum;\n    },\n    async createNewFlight() {\n      console.log(\"ODREDJIVANJE KOORDINATA\");\n      await this.getCoordsFromAdresa(this.flight.lokOd.adresa);\n      this.flight.lokOd.lat = this.lokacija.lat;\n      this.flight.lokOd.lng = this.lokacija.lng;\n      await this.getCoordsFromAdresa(this.flight.lokDo.adresa);\n      this.flight.lokDo.lat = this.lokacija.lat;\n      this.flight.lokDo.lng = this.lokacija.lng;\n      console.log(\"RUTA: \" + JSON.stringify(this.flight.lokOd));\n      dataService.createNewFlight(this.flight).then(response => {\n        console.log(\"KREIRAN LET\");\n        if (response.status === 200) {\n          this.messages.successMessage = '<h4>Uspesno dodat let</h4>';\n          setTimeout(() => {\n            this.messages.successMessage = '';\n            this.$router.push(`/dash`);\n          });\n        }\n      });\n    },\n    async getCoordsFromAdresa(adresa) {\n      return ymaps.geocode(adresa).then(result => {\n        let locationCoords = {\n          coords: result.geoObjects.get(0).geometry.getCoordinates()\n        };\n        this.lokacija.lat = locationCoords.coords[0];\n        this.lokacija.lng = locationCoords.coords[1];\n        console.log(\"LOKACIJA: \" + JSON.stringify(this.lokacija));\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["parserMixin","dataService","VueDatePicker","moment","YandexMap","YandexMarker","loadYmap","components","datepicker","data","messages","successMessage","errorMessage","errorLokOd","errorLokDo","errorTermin","errorBrLet","errorKapacitet","errorCena","flight","lokOd","Object","lokDo","brojLeta","kapacitet","cena","datumIVreme","Date","lokacija","mounted","settings","format","debug","created","methods","updateDatePicker","val1","console","log","tempDatum","createNewFlight","getCoordsFromAdresa","adresa","lat","lng","JSON","stringify","then","response","status","setTimeout","$router","push","ymaps","geocode","result","locationCoords","coords","geoObjects","get","geometry","getCoordinates"],"sourceRoot":"","sources":["C:\\Users\\SNSBOT\\Desktop\\XML-2023[PROJEKAT]\\APP2-front\\planetickets\\src\\components\\NoviLet.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <h2>Kreiranje novog entiteta</h2>\r\n            <p>Popunite trazene karakteristike kako biste kreirali entitet</p>\r\n        </div>\r\n        <div>\r\n            <div style=\"width:50%\">\r\n                <table class=\"table\">\r\n\r\n\r\n                    <tr>\r\n                        <td>Broj</td>\r\n                        <td><input class=\"input-class\" v-model=\"fligh.brojLeta\" type=\"text\" placeholder=\"Unesite broj leta...\" ></td>\r\n                    </tr>\r\n                     <tr>\r\n                        <td>Mesto polaska</td>\r\n                        <td><input class=\"input-class\" v-model=\"flight.lokOd.adresa\" type=\"text\" placeholder=\"Unesite mesto polaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Mesto dolaska</td>\r\n                        <td><input class=\"input-class\" v-model=\"flight.lokDo.adresa\" type=\"text\" placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Maksimalni kapacitet</td>\r\n                        <td><input v-model=\"flight.kapacitet\" class=\"input-class\" type=\"text\" placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Cena karte</td>\r\n                        <td><input v-model=\"flight.cena\" class=\"input-class\" type=\"text\"  placeholder=\"Unesite mesto dolaska...\" ></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Datum i vreme polaska</td>\r\n                        <td>\r\n                            <datepicker @selected=\"updateDatePicker\" v-model=\"flight.datumIVreme\">\r\n\r\n                            </datepicker>\r\n                        </td>\r\n                    </tr>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <div v-if=\"messages.successMessage\" v-html=\"messages.successMessage\" class=\"alert alert-success\"></div>\r\n                            <div v-if=\"messages.errorMessage\" v-html=\"messages.errorMessage\" class=\"alert alert-error\"></div>\r\n                            <td colspan=\"2\" class=\"text-center\">\r\n                                <button @click=\"createNewFlight()\">Kreiraj</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport parserMixin from '@/mixins/mixin' \r\nimport dataService from '../services/dataService'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport moment from 'moment'\r\n\r\nimport {YandexMap, YandexMarker} from \"vue-yandex-maps\"\r\nimport { loadYmap } from \"vue-yandex-maps\";\r\n\r\nexport default {\r\n    components:{\r\n        datepicker:VueDatePicker,\r\n        YandexMap, YandexMarker,\r\n    },\r\n    data(){\r\n        return{\r\n            //Polja u Klasi Let\r\n\r\n            // private String id;\r\n\t\r\n            // private Adresa lokOd;\r\n            // private Adresa lokDo;\r\n            \r\n            // private String brojLeta;\r\n            // private int kapacitet;\r\n            // private double cena;\r\n            // private LocalDateTime datumIVreme;\r\n            // @DBRef\r\n            // @Nullable\r\n            // private Collection<RegKor> listaPutnika;\r\n\r\n            messages:{\r\n                successMessage:'',\r\n                errorMessage:'',\r\n                \r\n                errorLokOd:'',\r\n                errorLokDo:'',\r\n                errorTermin:'',\r\n                errorBrLet:'',\r\n                errorKapacitet:'',\r\n                errorCena:'',\r\n            },\r\n            flight:{\r\n                lokOd: new Object(),\r\n                lokDo: new Object(),\r\n                //ovo bi trebalo generisati automatski al ajd\r\n                brojLeta: -1,\r\n                kapacitet: -1,\r\n                cena: -1,\r\n                datumIVreme: new Date(),\r\n            },\r\n            lokacija: new Object(),\r\n        }\r\n    },\r\n    async mounted(){\r\n        await loadYmap({ ...this.settings, format: \"json\", debug: true});\r\n    },\r\n    created(){\r\n\r\n    },\r\n    methods:{\r\n        updateDatePicker(val1){\r\n            console.log(\"VAL1: \"  + val1);\r\n            let tempDatum = moment(val1).format('YYYY-MM-DD');\r\n            console.log(\"TEMP DATUM: \"  + tempDatum);\r\n            this.flight.datumIVreme = tempDatum;\r\n        },\r\n        async createNewFlight(){\r\n            console.log(\"ODREDJIVANJE KOORDINATA\");\r\n            await this.getCoordsFromAdresa(this.flight.lokOd.adresa);\r\n            this.flight.lokOd.lat = this.lokacija.lat;\r\n            this.flight.lokOd.lng = this.lokacija.lng;\r\n\r\n            await this.getCoordsFromAdresa(this.flight.lokDo.adresa);\r\n            this.flight.lokDo.lat = this.lokacija.lat;\r\n            this.flight.lokDo.lng = this.lokacija.lng;\r\n\r\n            console.log(\"RUTA: \" + JSON.stringify(this.flight.lokOd));\r\n\r\n            dataService.createNewFlight(this.flight).then(response => {\r\n                console.log(\"KREIRAN LET\");\r\n                if(response.status === 200){\r\n                    this.messages.successMessage = '<h4>Uspesno dodat let</h4>'\r\n                    setTimeout(() => {\r\n                        this.messages.successMessage = '';\r\n                        this.$router.push(`/dash`);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        async getCoordsFromAdresa(adresa){\r\n            return ymaps.geocode(adresa).then((result) => {\r\n                let locationCoords = {\r\n                    coords: result.geoObjects.get(0).geometry.getCoordinates(),\r\n                };\r\n                this.lokacija.lat = locationCoords.coords[0];\r\n                this.lokacija.lng = locationCoords.coords[1];\r\n                console.log(\"LOKACIJA: \" + JSON.stringify(this.lokacija));\r\n            });\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.table{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    margin-left: 20px;\r\n}\r\n.table tr:nth-child(even){\r\n    background-color: aquamarine;\r\n}\r\n.table td:nth-child(1){\r\n    width:30%;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n}\r\n.table td:nth-child(2){\r\n    width:100%;\r\n}\r\n.table td>input{\r\n    width:100%;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}