{"ast":null,"code":"import _objectSpread from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/SNSBOT/Desktop/XML-2023-projekat2/frontend/template-project/planetickets/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport StarRating from 'vue-star-rating';\nimport dataService from \"../services/dataService\";\nimport { YandexMap, YandexMarker } from \"vue-yandex-maps\";\nimport { loadYmap } from \"vue-yandex-maps\";\nimport \"regenerator-runtime/runtime\";\nimport CommentSection from '../components/CommentSection.vue';\nimport parserMixin from '@/mixins/mixin';\nexport default {\n  components: {\n    starrating: StarRating,\n    YandexMap: YandexMap,\n    YandexMarker: YandexMarker,\n    CommentSection: CommentSection\n  },\n  data: function data() {\n    return {\n      settings: {\n        apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\n        lang: \"en_US\",\n        coordorder: \"latlong\",\n        enterprise: false,\n        version: \"2.1\"\n      },\n      idEntiteta: -1,\n      entity: {},\n      userObj: {},\n      //mapa\n      koordinate: []\n    };\n  },\n  methods: {\n    makeReservation: function makeReservation() {},\n    getEntity: function getEntity() {\n      var _this = this;\n      dataService.getEntity(this.idEntiteta).then(function (response) {\n        console.log(\"DOBAVLJEN ENTITET\");\n        _this.entity = response.data;\n      });\n    },\n    getCoordsFromAdresa: function getCoordsFromAdresa() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    } // return dataService.getMedCentarByWorkerId(this.userId).then(response => {\n    //     this.idCentraNabavljac = response.data.id;\n    //     console.log(\"DOBAVLJEN MEDCENTAR U KOM RADI RADNIK\");\n    //     this.adresaNabavljaca = response.data.adresa;\n    //     console.log(\"ADRESA OD JE: \" + this.adresaNabavljaca)\n    //     ymaps.geocode(this.adresaNabavljaca).then((res) => {\n    //     console.log(\"ADRESA: \" + this.adresaNabavljaca);\n    //     let tmpObjekat = {\n    //         koordinateTemp: res.geoObjects.get(0).geometry.getCoordinates(),\n    //     };\n    //     this.orderForm.lokacijaDo.lat = tmpObjekat.koordinateTemp[0];\n    //     this.orderForm.lokacijaDo.lng = tmpObjekat.koordinateTemp[1];\n    //     console.log(\"tmpObjekat: \" + JSON.stringify(tmpObjekat));\n    //     // this.lokacije.push(tmpObjekat);\n    //     this.lokacija.push(tmpObjekat);\n    //     console.log(\"LOKACIJA: \" + JSON.stringify(this.lokacija));\n    //     });\n    // });\n  },\n  created: function created() {\n    var _this2 = this;\n    console.log(\"AAAA\");\n    // parserMixin.methods.checkLoginStatus();\n    // this.userObj = parserMixin.methods.parseXmlJwt();\n    // console.log(\"ID KORISNIKA: \" + this.userObj.id)\n    // this.idEntiteta = this.$route.params.id;\n    navigator.geolocation.getCurrentPosition(function (geolocation) {\n      _this2.koordinate.push(geolocation.coords.latitude);\n      _this2.koordinate.push(geolocation.coords.longitude);\n    });\n    console.log(\"KOORDINATE KORISNIKA: \" + JSON.stringify(this.koordinate));\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return loadYmap(_objectSpread(_objectSpread({}, _this3.settings), {}, {\n              format: \"json\",\n              debug: true\n            }));\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  },\n  computed: {\n    balloonTemplate: function balloonTemplate() {\n      return \"\\n                <h1 class=\\\"red\\\">Entitet!</h1>\\n                <p>Adresa centra: \".concat(this.entitet.adresa, \"</p>\\n                <p>Ocena centra: \").concat(this.entitet.ocena, \"</p>\\n                <img src=\\\"http://via.placeholder.com/350x150\\\">\\n                    \");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAyGA,OAAOA,UAAS,MAAO,iBAAgB;AACvC,OAAOC,WAAU,MAAO,yBAAwB;AAChD,SAAQC,SAAS,EAAEC,YAAY,QAAO,iBAAgB;AACtD,SAASC,QAAO,QAAS,iBAAiB;AAC1C,OAAO,6BAA6B;AACpC,OAAOC,cAAa,MAAO,kCAAiC;AAE5D,OAAOC,WAAU,MAAO,gBAAe;AAEvC,eAAe;EACXC,UAAU,EAAC;IACPC,UAAU,EAACR,UAAU;IACrBE,SAAS,EAATA,SAAS;IAAEC,YAAY,EAAZA,YAAY;IACvBE,cAAc,EAAdA;EACJ,CAAC;EACDI,IAAI,kBAAE;IACF,OAAM;MACFC,QAAQ,EAAE;QACNC,MAAM,EAAE,sCAAsC;QAC9CC,IAAI,EAAE,OAAO;QACbC,UAAU,EAAE,SAAS;QACrBC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE;MACb,CAAC;MACDC,UAAU,EAAE,CAAC,CAAC;MACdC,MAAM,EAAC,CAEP,CAAC;MACDC,OAAO,EAAC,CAER,CAAC;MACD;MACAC,UAAU,EAAC;IACf;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,eAAe,6BAAE,CAEjB,CAAC;IACDC,SAAS,uBAAE;MAAA;MACPrB,WAAW,CAACqB,SAAS,CAAC,IAAI,CAACN,UAAU,CAAC,CAACO,IAAI,CAAC,kBAAO,EAAK;QACpDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,KAAI,CAACR,MAAK,GAAIS,QAAQ,CAACjB,IAAI;MAC/B,CAAC,CAAC;IACN,CAAC;IACKkB,mBAAmB,iCAAE;MAAA;QAAA;UAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAmB3B,CAAC,CAlBG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAER,CAAC;EACDC,OAAO,qBAAE;IAAA;IACLJ,OAAO,CAACC,GAAG,CAAC,MAAM;IAClB;IACA;IACA;IACA;IACAI,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAACD,WAAW,EAAK;MACtD,MAAI,CAACX,UAAU,CAACa,IAAI,CAACF,WAAW,CAACG,MAAM,CAACC,QAAQ,CAAC;MACjD,MAAI,CAACf,UAAU,CAACa,IAAI,CAACF,WAAW,CAACG,MAAM,CAACE,SAAS,CAAC;IACtD,CAAC,CAAC;IACFX,OAAO,CAACC,GAAG,CAAC,wBAAuB,GAAIW,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,UAAU,CAAC,CAAC;EAC3E,CAAC;EACKmB,OAAO,qBAAE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACLlC,QAAQ,iCAAM,MAAI,CAACM,QAAQ;cAAE6B,MAAM,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAI,GAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAGpE,CAAC;EACDC,QAAQ,EAAC;IACLC,eAAe,6BAAG;MACd,sGAEwB,IAAI,CAACC,OAAO,CAACC,MAAM,oDACpB,IAAI,CAACD,OAAO,CAACE,KAAK;IAGzC;EACR;AACJ","names":["StarRating","dataService","YandexMap","YandexMarker","loadYmap","CommentSection","parserMixin","components","starrating","data","settings","apiKey","lang","coordorder","enterprise","version","idEntiteta","entity","userObj","koordinate","methods","makeReservation","getEntity","then","console","log","response","getCoordsFromAdresa","created","navigator","geolocation","getCurrentPosition","push","coords","latitude","longitude","JSON","stringify","mounted","format","debug","computed","balloonTemplate","entitet","adresa","ocena"],"sourceRoot":"","sources":["C:\\Users\\SNSBOT\\Desktop\\XML-2023-projekat2\\frontend\\template-project\\planetickets\\src\\overviews\\EntityOverview.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 50%;\">\r\n        <div style=\"margin-left:10px;margin-bottom:100px;\">\r\n            <h1>Podaci o entitetu</h1>\r\n            <table style=\"margin-left: 10px\" id=\"table_overview\">\r\n                <tr>\r\n                    <td>Naziv:</td>\r\n                    <td>\r\n                        <input type=\"text\" readonly v-model=\"entity.naziv\" />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Adresa:</td>\r\n                    <td>\r\n                        <input type=\"text\" readonly v-model=\"entity.adresa\" />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Radno vreme:</td>\r\n                    <td>\r\n                        <input type=\"text\" readonly v-model=\"radnoVreme\" />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Ocena:</td>\r\n                    <td>\r\n                        <starrating read-only v-model=\"entity.ocena\" />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Krvna grupa:</td>\r\n                    <td>\r\n                        <select @change=\"selectGroup()\" v-model=\"selectedGroup\">\r\n                        <option value=\"1\">A grupa</option>\r\n                        <option value=\"2\">AB grupa</option>\r\n                        <option value=\"3\">B grupa</option>\r\n                        <option value=\"4\">Nulta grupa</option>\r\n                        </select>\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td colspan=\"2\">\r\n                        <input\r\n                        style=\"width: 100%\"\r\n                        placeholder=\"Stanje zaliha odabrane grupe izrazeno u litrima...\"\r\n                        v-model=\"bloodReserve\"\r\n                        type=\"text\"\r\n                        readonly\r\n                        />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td colspan=\"2\">\r\n                        <div v-if=\"entity.opis\">\r\n                        <textarea\r\n                            style=\"width: 100%; height: 150px; overflow: auto\"\r\n                            v-text=\"entity.opis\"\r\n                            readonly\r\n                        />\r\n                        </div>\r\n                        <div\r\n                        v-if=\"!entity.opis\"\r\n                        v-text=\"'Kratak opis medicinskog centra...'\"\r\n                        ></div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\" style=\"text-align: center\">\r\n                        <button class=\"rezervisi-button\" @click=\"makeReservation()\">Rezervisi</button>\r\n                    </td>\r\n                </tr>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <yandex-map\r\n                                :settings=\"settings\"\r\n                                :coordinates=\"koordinate\"\r\n                                zoom=\"5\"\r\n                                style=\"width: 100%; height: 600px\"\r\n                                language=\"en-US\"\r\n                            >\r\n                                <!-- <ymap-marker\r\n                                v-for=\"(tmp, index) in lokacija\"\r\n                                :key=\"index\"\r\n                                :marker-id=\"index\"\r\n                                :coords=\"tmp.koordinateTemp\"\r\n                                :balloon-template=\"balloonTemplate\"\r\n                                >\r\n                                </ymap-marker> -->\r\n                            </yandex-map>\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div style=\"width:100%;\">\r\n        <comment-section></comment-section>\r\n    </div>\r\n    \r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport StarRating from 'vue-star-rating'\r\nimport dataService from \"../services/dataService\"\r\nimport {YandexMap, YandexMarker} from \"vue-yandex-maps\"\r\nimport { loadYmap } from \"vue-yandex-maps\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport CommentSection from '../components/CommentSection.vue'\r\n\r\nimport parserMixin from '@/mixins/mixin'\r\n\r\nexport default {\r\n    components:{\r\n        starrating:StarRating,\r\n        YandexMap, YandexMarker,\r\n        CommentSection,\r\n    }, \r\n    data(){\r\n        return{\r\n            settings: {\r\n                apiKey: \"5e04929d-e957-4fdd-b85c-08e60b3cb3f0\",\r\n                lang: \"en_US\",\r\n                coordorder: \"latlong\",\r\n                enterprise: false,\r\n                version: \"2.1\",\r\n            },\r\n            idEntiteta: -1,\r\n            entity:{\r\n                \r\n            },\r\n            userObj:{\r\n\r\n            },\r\n            //mapa\r\n            koordinate:[],\r\n        }\r\n    },\r\n    methods:{\r\n        makeReservation(){\r\n            \r\n        },\r\n        getEntity(){\r\n            dataService.getEntity(this.idEntiteta).then(response => {\r\n                console.log(\"DOBAVLJEN ENTITET\");\r\n                this.entity = response.data;\r\n            });\r\n        },\r\n        async getCoordsFromAdresa(){\r\n            // return dataService.getMedCentarByWorkerId(this.userId).then(response => {\r\n            //     this.idCentraNabavljac = response.data.id;\r\n            //     console.log(\"DOBAVLJEN MEDCENTAR U KOM RADI RADNIK\");\r\n            //     this.adresaNabavljaca = response.data.adresa;\r\n            //     console.log(\"ADRESA OD JE: \" + this.adresaNabavljaca)\r\n            //     ymaps.geocode(this.adresaNabavljaca).then((res) => {\r\n            //     console.log(\"ADRESA: \" + this.adresaNabavljaca);\r\n            //     let tmpObjekat = {\r\n            //         koordinateTemp: res.geoObjects.get(0).geometry.getCoordinates(),\r\n            //     };\r\n            //     this.orderForm.lokacijaDo.lat = tmpObjekat.koordinateTemp[0];\r\n            //     this.orderForm.lokacijaDo.lng = tmpObjekat.koordinateTemp[1];\r\n            //     console.log(\"tmpObjekat: \" + JSON.stringify(tmpObjekat));\r\n            //     // this.lokacije.push(tmpObjekat);\r\n            //     this.lokacija.push(tmpObjekat);\r\n            //     console.log(\"LOKACIJA: \" + JSON.stringify(this.lokacija));\r\n            //     });\r\n            // });\r\n        },\r\n    },\r\n    created(){\r\n        console.log(\"AAAA\")\r\n        // parserMixin.methods.checkLoginStatus();\r\n        // this.userObj = parserMixin.methods.parseXmlJwt();\r\n        // console.log(\"ID KORISNIKA: \" + this.userObj.id)\r\n        // this.idEntiteta = this.$route.params.id;\r\n        navigator.geolocation.getCurrentPosition((geolocation) => {\r\n            this.koordinate.push(geolocation.coords.latitude);\r\n            this.koordinate.push(geolocation.coords.longitude);\r\n        });\r\n        console.log(\"KOORDINATE KORISNIKA: \" + JSON.stringify(this.koordinate));\r\n    },\r\n    async mounted(){\r\n        await loadYmap({ ...this.settings, format: \"json\", debug: true});\r\n        // await this.getEntity();\r\n        // await this.getCoordsFromAdresa();\r\n    },\r\n    computed:{\r\n        balloonTemplate() {\r\n            return `\r\n                <h1 class=\"red\">Entitet!</h1>\r\n                <p>Adresa centra: ${this.entitet.adresa}</p>\r\n                <p>Ocena centra: ${this.entitet.ocena}</p>\r\n                <img src=\"http://via.placeholder.com/350x150\">\r\n                    `;\r\n            },\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n#table_overview {\r\n  font-size: 20px;\r\n  font-style: oblique;\r\n  font-weight: 600;\r\n}\r\n#table_overview input {\r\n  width: 100%;\r\n}\r\n#table_overview select {\r\n  width: 100%;\r\n}\r\n\r\n#table_overview tr {\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n#table_overview tr:nth-child(even) {\r\n  background-color: #198754;\r\n}\r\n#table_overview td:first-child {\r\n  width: 20%;\r\n}\r\n#table_overview td:last-child {\r\n  width: 200px;\r\n}\r\n\r\n.rezervisi-button {\r\n  color: #5cb85c;\r\n  border: 2px solid #5cb85c;\r\n  background-color: white;\r\n  font-weight: 500;\r\n  width: 200px;\r\n  font-size: 15px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition-duration: 0.4s;\r\n}\r\n.rezervisi-button:hover {\r\n  /* background-color: #f0ad4e; */\r\n  /* color: white; */\r\n  color: #198754;\r\n  font-size: 20px;\r\n  font-weight: 200px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}